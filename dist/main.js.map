{"version":3,"file":"main.js","mappings":"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","sources":["webpack://beatitup/./src/scripts/drawer.js","webpack://beatitup/./src/scripts/audio.js","webpack://beatitup/./src/scripts/canvas.js","webpack://beatitup/./src/index.js"],"sourcesContent":["const canvas = document.getElementById('visualizer-canvas');\nconst canvasCtx = canvas.getContext('2d');\ncanvas.width = canvas.clientWidth; //might change\ncanvas.height = canvas.clientHeight; // might change\n\nconst barSize = document.getElementById('size');\nlet barMultipler;\nbarSize.addEventListener('input', function(){\n  barMultipler = barSize.value;\n\n})\n\nconst hue = document.getElementById('hue-slider');\nlet hueValueDisplay = document.getElementById('hue-value')\nlet hueValue = parseInt(hue.value);\nhue.addEventListener('input', function(){\n  hueValue = parseInt(hue.value);\n  hueValueDisplay.innerHTML = hue.value\n})\n\nconst saturation = document.getElementById('saturation-slider');\nconst saturationValueDisplay = document.getElementById('saturation-value')\nlet saturationValue = parseInt(saturation.value);\nsaturation.addEventListener('input', function(){\n  saturationValue = parseInt(saturation.value);\n  saturationValueDisplay.innerHTML = saturation.value\n})\n\n\nconst lightness = document.getElementById('lightness-slider');\nconst lightnessDisplayValue = document.getElementById('lightness-value')\nlet lightnessValue = parseInt(lightness.value);\nlightness.addEventListener('input', function(){\n  lightnessValue = parseInt(lightness.value);\n  lightnessDisplayValue.innerHTML = lightness.value\n})\n\nconst plainOrRainbowArray = document.getElementsByName('rainbow-bool');\nconst rainbowBoolFalse = document.getElementById('rainbow-f');\nconst rainbowBoolTrue = document.getElementById('rainbow-t');\nlet plainOrRainbowValue;\n\nrainbowBoolTrue.addEventListener('input', function(e){\n  plainOrRainbowArray.forEach(option => {\n    if (option.checked) {\n      plainOrRainbowValue = option.value\n    }\n  });\n})\n\nrainbowBoolFalse.addEventListener('input', function(e){\n  plainOrRainbowArray.forEach(option => {\n    if (option.checked) {\n      plainOrRainbowValue = option.value\n    }\n  });\n})\n\nexport function circularDrawer(bufferLength, xPos, barWidth, barHeight, dataArray){\n  for (let i = 0; i < bufferLength; i++){\n    barHeight = dataArray[i] * barMultipler\n    canvasCtx.save()\n    canvasCtx.translate(canvas.width/2, canvas.height/2);\n    canvasCtx.rotate(i + Math.PI * 2/bufferLength)\n    let hueCode = plainOrRainbowValue === 'false' ? hueValue : hueValue * i * 5;\n    canvasCtx.fillStyle = 'hsl(' + hueCode + ', ' + saturationValue + '%, ' + lightnessValue + '%)';\n    canvasCtx.fillRect(0, 0, barWidth, barHeight);\n    xPos += barWidth;\n    canvasCtx.restore();\n  }\n}\n\nexport function rectangularDrawer(bufferLength, xPos, barWidth, barHeight, dataArray){\n  for (let i = 0; i < bufferLength; i++){\n    let hueCode = plainOrRainbowValue === 'false' ? hueValue : hueValue * i;\n    barHeight = dataArray[i] * barMultipler\n    canvasCtx.fillStyle = 'hsl(' + hueCode + ', ' + saturationValue + '%, ' + lightnessValue + '%)';\n    canvasCtx.fillRect(xPos, canvas.height - barHeight, barWidth, barHeight);\n    xPos += barWidth;\n  }\n}","let audioElement = document.getElementById('audio-element')\n// audioElement.crossOrigin = 'anonymous';\n\nconst file = document.getElementById('music-upload')\nfile.addEventListener('change', function(){\n  let files = this.files\n  audioElement.src = URL.createObjectURL(files[0]);\n  audioElement.load();\n})\n\nfunction randomIdFinder(min,max){\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nexport async function fetchJamendoSound() {\n  let jamendoID = randomIdFinder(10, 250100);\n  try{\n    let res = await fetch(`http://localhost:5000/jamendosound?id=${jamendoID}`);\n    let body = await res.json();\n    if (body.results.length === 1) {\n      audioElement.src = body.results[0].audio;\n    } else {\n      return await fetchJamendoSound();\n    };\n    }\n    catch (err) {\n    console.log(err)\n  };\n}\n\nexport async function fetchYoutubeSound() {\n  const youtubeAPI = 'http:localhost:5000/youtubesound';  \n  try {\n    let res = await fetch(youtubeAPI);\n    let body = await res.json();\n    let randomId = randomIdFinder(0, 5142);\n    let youtubeSoundKey = body.arr[randomId];\n    console.log(body.map[youtubeSoundKey])\n    let res2 = await fetch(`http://localhost:5000/youtubesounds?url=${encodeURIComponent(body.map[youtubeSoundKey])}`);\n    let body2 = await res2.blob()\n    console.log(URL.createObjectURL(body2))\n    audioElement.src = URL.createObjectURL(body2)\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function fetchFreeSound(){\n  let freeSoundId = randomIdFinder(6, 682339)\n  const freeSoundAPI = `http://localhost:5000/freesound?id=${freeSoundId}`\n  try {\n    let res = await fetch(freeSoundAPI)\n    let body = await res.json();\n    audioElement.src = body.previews['preview-hq-mp3'];\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n//audio controls feature to be added later\n// const playButton = document.getElementById('playbutton')\n\n// playButton.addEventListener('click', function(){\n//   audioElement.play();\n// })","import {circularDrawer, rectangularDrawer} from './drawer';\nimport { fetchJamendoSound, fetchFreeSound, fetchYoutubeSound } from './audio';\n\n\nlet fftSizeInput = document.getElementById('bar-amount');\nlet fftSizeValue = fftSizeInput.value;\n\nfftSizeInput.addEventListener('change', function(){\n  fftSizeValue = parseInt(fftSizeInput.value)\n})\n\n//canvas setup\nwindow.canvas = document.getElementById('visualizer-canvas');\nconst canvasCtx = canvas.getContext('2d');\n\n//audio set up\nconst audioElement = document.getElementById('audio-element');\nconst audioContext = new AudioContext();\nlet analyzer = audioContext.createAnalyser();;\nlet audioSource;\n\nanalyzer.fftSize = fftSizeValue;\nlet bufferLength = analyzer.frequencyBinCount;\nlet dataArray = new Uint8Array(bufferLength);\nlet barWidth = canvas.width/(Math.floor(bufferLength - 5))\nlet barHeight;\nlet xPos;\n\nlet disconnected = true;\n\n// visualizer event listener for change\nlet visualizerShapeSelector = document.getElementById('shape-selector')\n\nvisualizerShapeSelector.addEventListener('change', drawSelector);\n\n//visualizer function\nexport function visualizer(drawerFunc){\n  function animation(){\n    xPos = 0;\n    canvasCtx.clearRect(0,0,canvas.width, canvas.height)\n    analyzer.getByteFrequencyData(dataArray);\n    drawerFunc(bufferLength, xPos, barWidth, barHeight, dataArray);\n    requestAnimationFrame(animation);\n  }\n\n  let animate = requestAnimationFrame(animation);\n\n  if (animate) {\n    cancelAnimationFrame(animate);\n  }\n\n  if(audioContext.state === 'suspended'){\n    audioContext.resume();\n  }\n  \n  if(disconnected) {\n    audioSource = audioContext.createMediaElementSource(audioElement);\n    audioSource.connect(analyzer);\n    analyzer.connect(audioContext.destination)\n    animation();\n    disconnected = false;\n  }\n  \n  animation();\n  \n  };\n\n\n// add an event listener to the input element to update the visualizer whenever the input changes\nfftSizeInput.addEventListener('change', function(){\n  analyzer.fftSize = fftSizeValue;\n  bufferLength = analyzer.frequencyBinCount;\n  dataArray = new Uint8Array(bufferLength);\n  barWidth = canvas.width/(Math.floor(bufferLength - 5))\n});\n\n\nexport function drawSelector(){\n  if (visualizerShapeSelector.value === 'rectangle') {\n    visualizer(rectangularDrawer);\n  } else {\n    visualizer(circularDrawer);\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import {visualizer, drawSelector} from './scripts/canvas';\nimport {circularDrawer, rectangularDrawer} from './scripts/drawer';\nimport {fetchJamendoSound, fetchYoutubeSound, fetchFreeSound} from './scripts/audio';\n\nlet audioAPISelector = document.getElementById('music-api-selector')\nlet generateRandomSound = document.getElementById('random-api-sound-generator')\nlet audioElement = document.getElementById('audio-element')\naudioElement.volume = 0.2;\nlet visualizerShape = document.getElementById('shape-selector')\n\n\n\n\n//bring into index.js\naudioAPISelector.addEventListener('input', function(){\n  if (audioAPISelector.value === 'jamendoAPI') { \n    generateRandomSound.addEventListener('click', fetchJamendoSound);\n  } else if (audioAPISelector.value === 'youtube-audio-library') {\n    generateRandomSound.addEventListener('click', fetchYoutubeSound)\n  } else {\n    generateRandomSound.addEventListener('click', fetchFreeSound)\n  }\n})\n\n\n// visualizerShape.addEventListener('input', function(){\n//   if (visualizerShape.value === 'rectangle') {\n//     audioElement.addEventListener('play', visualizer(rectangularDrawer));\n//   } else {\n//     audioElement.addEventListener('play', visualizer(circularDrawer));\n//   }\n// })\n\n\naudioElement.addEventListener('play', drawSelector);"],"names":["canvas","document","getElementById","canvasCtx","getContext","width","clientWidth","height","clientHeight","barSize","barMultipler","addEventListener","value","hue","hueValueDisplay","hueValue","parseInt","innerHTML","saturation","saturationValueDisplay","saturationValue","lightness","lightnessDisplayValue","lightnessValue","plainOrRainbowArray","getElementsByName","rainbowBoolFalse","plainOrRainbowValue","circularDrawer","bufferLength","xPos","barWidth","barHeight","dataArray","i","save","translate","rotate","Math","PI","hueCode","fillStyle","fillRect","restore","rectangularDrawer","e","forEach","option","checked","audioElement","randomIdFinder","min","max","ceil","floor","random","async","fetchJamendoSound","jamendoID","res","fetch","body","json","results","length","src","audio","err","console","log","fetchYoutubeSound","randomId","youtubeSoundKey","arr","map","res2","encodeURIComponent","body2","blob","URL","createObjectURL","error","fetchFreeSound","freeSoundAPI","previews","files","this","load","fftSizeInput","fftSizeValue","window","audioContext","AudioContext","audioSource","analyzer","createAnalyser","fftSize","frequencyBinCount","Uint8Array","disconnected","visualizerShapeSelector","visualizer","drawerFunc","animation","clearRect","getByteFrequencyData","requestAnimationFrame","animate","cancelAnimationFrame","state","resume","createMediaElementSource","connect","destination","drawSelector","audioAPISelector","generateRandomSound","volume"],"sourceRoot":""}